(()=>{"use strict";var n={426:(n,e,r)=>{r.d(e,{Z:()=>d});var t=r(537),a=r.n(t),o=r(645),c=r.n(o),i=r(667),A=r.n(i),s=new URL(r(845),r.b),p=c()(a()),l=A()(s);p.push([n.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  color: black;\r\n}\r\n\r\nimg:not(.icon) {\r\n  display: block;\r\n  width: 150px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n}\r\n\r\nbody {\r\n  background: url("+l+") no-repeat center/cover;\r\n}\r\n\r\n.header {\r\n  height: 80px;\r\n  background-color: rgba(0, 0, 0, .1);\r\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, .1);\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 30px;\r\n}\r\n\r\n.page-title {\r\n  font-size: 3rem;\r\n}\r\n\r\n.main-container {\r\n  display: grid;\r\n  gap: 40px;\r\n  justify-content: center;\r\n  padding: 30px 0;\r\n}\r\n\r\n.conf {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.conf > div {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.city {\r\n  justify-self: end;\r\n  position: relative;\r\n}\r\n\r\n.city label {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.city input {\r\n  color: black;\r\n  padding: 10px 30px 10px 10px;\r\n  outline: none;\r\n  background-color: rgba(0, 0, 0, .1);\r\n  border: none;\r\n}\r\n\r\n.search {\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 2px;\r\n}\r\n\r\n.main-img {\r\n  width: 150px;\r\n  height: 150px;\r\n}\r\n\r\n.img {\r\n  width: 60px;\r\n  height: 60px;\r\n}\r\n\r\n.forecast {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.description, .day, .date {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.description {\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.city-name, .temperature {\r\n  font-size: 3rem;\r\n}\r\n\r\n.min-max {\r\n  display: flex;\r\n  gap: 80px;\r\n  font-size: 2.25rem;\r\n  margin-top: 10px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.week-forecast {\r\n  display: flex;\r\n  gap: 50px;\r\n  position: relative;\r\n}\r\n\r\n.week-forecast div:not(.temp) {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.week-forecast::before {\r\n  content: '';\r\n  height: 1.25px;\r\n  width: 110%;\r\n  display: block;\r\n  background-color: rgba(255, 255, 255, .2);\r\n  position: absolute;\r\n  left: -30px;\r\n  top: -20px;\r\n}\r\n\r\n.icon {\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n\r\n.date {\r\n  margin-top: 15px;\r\n}\r\n\r\n.temp {\r\n  display: flex;\r\n  margin-top: 20px;\r\n  gap: 20px;\r\n}\r\n\r\n.measurement {\r\n  margin-bottom: 40px;\r\n  padding-top: 8px;\r\n}\r\n\r\n.measurement p {\r\n  cursor: pointer;\r\n  font-size: 1.125rem;\r\n}\r\n\r\n.footer {\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.c, .f {\r\n  display: none;\r\n}\r\n\r\n.c.active, .f.active {\r\n  display: block;\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,YAAY;AACd;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,0EAAuD;AACzD;;AAEA;EACE,YAAY;EACZ,mCAAmC;EACnC,yCAAyC;EACzC,aAAa;EACb,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,4BAA4B;EAC5B,aAAa;EACb,mCAAmC;EACnC,YAAY;AACd;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,kBAAkB;EAClB,UAAU;EACV,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,cAAc;EACd,WAAW;EACX,cAAc;EACd,yCAAyC;EACzC,kBAAkB;EAClB,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,SAAS;AACX;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  color: black;\r\n}\r\n\r\nimg:not(.icon) {\r\n  display: block;\r\n  width: 150px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n}\r\n\r\nbody {\r\n  background: url('./img/bg4.jpg') no-repeat center/cover;\r\n}\r\n\r\n.header {\r\n  height: 80px;\r\n  background-color: rgba(0, 0, 0, .1);\r\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, .1);\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 30px;\r\n}\r\n\r\n.page-title {\r\n  font-size: 3rem;\r\n}\r\n\r\n.main-container {\r\n  display: grid;\r\n  gap: 40px;\r\n  justify-content: center;\r\n  padding: 30px 0;\r\n}\r\n\r\n.conf {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.conf > div {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.city {\r\n  justify-self: end;\r\n  position: relative;\r\n}\r\n\r\n.city label {\r\n  font-size: 1.25rem;\r\n}\r\n\r\n.city input {\r\n  color: black;\r\n  padding: 10px 30px 10px 10px;\r\n  outline: none;\r\n  background-color: rgba(0, 0, 0, .1);\r\n  border: none;\r\n}\r\n\r\n.search {\r\n  cursor: pointer;\r\n  font-size: 1.25rem;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 2px;\r\n}\r\n\r\n.main-img {\r\n  width: 150px;\r\n  height: 150px;\r\n}\r\n\r\n.img {\r\n  width: 60px;\r\n  height: 60px;\r\n}\r\n\r\n.forecast {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.description, .day, .date {\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.description {\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.city-name, .temperature {\r\n  font-size: 3rem;\r\n}\r\n\r\n.min-max {\r\n  display: flex;\r\n  gap: 80px;\r\n  font-size: 2.25rem;\r\n  margin-top: 10px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.week-forecast {\r\n  display: flex;\r\n  gap: 50px;\r\n  position: relative;\r\n}\r\n\r\n.week-forecast div:not(.temp) {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.week-forecast::before {\r\n  content: '';\r\n  height: 1.25px;\r\n  width: 110%;\r\n  display: block;\r\n  background-color: rgba(255, 255, 255, .2);\r\n  position: absolute;\r\n  left: -30px;\r\n  top: -20px;\r\n}\r\n\r\n.icon {\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n\r\n.date {\r\n  margin-top: 15px;\r\n}\r\n\r\n.temp {\r\n  display: flex;\r\n  margin-top: 20px;\r\n  gap: 20px;\r\n}\r\n\r\n.measurement {\r\n  margin-bottom: 40px;\r\n  padding-top: 8px;\r\n}\r\n\r\n.measurement p {\r\n  cursor: pointer;\r\n  font-size: 1.125rem;\r\n}\r\n\r\n.footer {\r\n  text-align: center;\r\n  padding: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n.c, .f {\r\n  display: none;\r\n}\r\n\r\n.c.active, .f.active {\r\n  display: block;\r\n}\r\n\r\n"],sourceRoot:""}]);const d=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(t)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(c[A]=!0)}for(var s=0;s<n.length;s++){var p=[].concat(n[s]);t&&c[p[0]]||(void 0!==o&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=o),r&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=r):p[2]=r),a&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=a):p[4]="".concat(a)),e.push(p))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),c=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(c).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},c=[],i=0;i<n.length;i++){var A=n[i],s=t.base?A[0]+t.base:A[0],p=o[s]||0,l="".concat(s," ").concat(p);o[s]=p+1;var d=r(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var m=a(u,t);t.byIndex=i,e.splice(i,0,{identifier:l,updater:m,references:1})}c.push(l)}return c}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var c=0;c<o.length;c++){var i=r(o[c]);e[i].references--}for(var A=t(n,a),s=0;s<o.length;s++){var p=r(o[s]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}o=A}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},845:(n,e,r)=>{n.exports=r.p+"1b4b2cfd6d3fdc47e26a.jpg"}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.m=n,r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.b=document.baseURI||self.location.href,r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),a=r.n(t),o=r(569),c=r.n(o),i=r(565),A=r.n(i),s=r(216),p=r.n(s),l=r(589),d=r.n(l),u=r(426),m={};m.styleTagTransform=d(),m.setAttributes=A(),m.insert=c().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=p(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=function(){const n={cityInput:document.querySelector(".city input"),search:document.querySelector(".search"),cityName:document.querySelector(".city-name"),mainIcon:document.querySelector(".main-icon"),temperature:document.querySelector(".temperature"),min:document.querySelector(".min"),max:document.querySelector(".max"),description:document.querySelector(".description"),measurement:document.querySelector(".measurement"),celsius:document.querySelector(".c"),fahrenheit:document.querySelector(".f"),weekForecast:document.querySelector(".week-forecast")};return{select:n,createDayBox:function(e,r,t,a,o){const c=document.createElement("div"),i=document.createElement("span"),A=document.createElement("div"),s=new Image,p=document.createElement("div"),l=document.createElement("span"),d=document.createElement("span"),u=document.createElement("span");i.textContent=e,i.classList.add("day"),s.src=r,A.classList.add("img"),s.classList.add("icon"),u.textContent=t,u.classList.add("date"),p.classList.add("temp"),l.textContent=a,d.textContent=o,p.append(l,d),A.append(s),c.append(i,A,p,u),n.weekForecast.append(c)}}}(),g=r.p+"e802a9f70d731d2fd2f4.png",E=r.p+"cdbce7e3996f9609219f.png",C=r.p+"18dc023e509e4727794e.png",x=r.p+"956d99d7047f2c061bf0.png",h=r.p+"9ce18f766ecb176097b8.png",y=r.p+"cc81a50e8e6604dfe000.png",b=r.p+"d69fd8c352955f7d7ea3.png",B=r.p+"d69fd8c352955f7d7ea3.png",v=r.p+"651e07809f6d252af7c4.png",k={d10:g,n10:E,d20:C,n20:x,d30:h,n30:y,d40:b,n40:B,n90:r.p+"651e07809f6d252af7c4.png",d90:v,d01:r.p+"4f8d3bcc2812c7b5d9c9.png",n01:r.p+"4f8d3bcc2812c7b5d9c9.png",d11:r.p+"9500f729939001d86d11.png",n11:r.p+"9500f729939001d86d11.png",d31:r.p+"939dc1c78a3e515af5bc.png",n31:r.p+"939dc1c78a3e515af5bc.png",d05:r.p+"66cd0f5e79266310836a.png",n05:r.p+"66cd0f5e79266310836a.png",unknown:r.p+"d35abc149a7493c01157.png"};!function(){function n(n,e,r){const t=async function(n,e){const r=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${n}&limit=5&appid=6764af51c72b89c3c46e05248d404751`,{mode:"cors"}),t=await r.json();let a=t[0].lat,o=t[0].lon;const c=await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${a}&lon=${o}&exclude=hourly,minutely,alerts&units=${e}&appid=6764af51c72b89c3c46e05248d404751`,{mode:"cors"}),i=await c.json();return i.name=t[0].name,i}(n,e);t.then((n=>{!function(n,e){const r=n.current.weather[0].icon.split("").reverse().join("");f.select.cityName.textContent=n.name,f.select.temperature.textContent=`${Math.floor(n.current.temp)}º${e}`,f.select.mainIcon.setAttribute("src",k[r]),f.select.min.textContent=`${Math.floor(n.daily[0].temp.min)}º${e}`,f.select.max.textContent=`${Math.floor(n.daily[0].temp.max)}º${e}`,f.select.description.textContent=n.current.weather[0].description,function(n,e){const r=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];f.select.weekForecast.textContent="";for(let t=0;t<n.daily.length-1;t++){const a=n.daily[t].weather[0].icon.split("").reverse().join("");let o=new Date(1e3*n.daily[t].dt);const c=`${("0"+o.getDate()).toString().slice(-2)}/${("0"+o.getMonth()).toString().slice(-2)}`,i=`${Math.floor(n.daily[t].temp.min)}º${e}`,A=`${Math.floor(n.daily[t].temp.max)}º${e}`;f.createDayBox(r[o.getDay()],k[a],c,i,A)}}(n,e)}(n,r)})).catch((n=>{console.log(n),alert("We didn't found you city, please try again!")}))}f.select.celsius.classList.contains("active")?n("São Paulo","metric","C"):f.select.fahrenheit.classList.contains("active")&&n("São Paulo","imperial","F"),f.select.search.addEventListener("click",(function(){const e=f.select.cityInput.value;""===e?alert("Write your city name!"):f.select.celsius.classList.contains("active")?n(e,"metric","C"):f.select.fahrenheit.classList.contains("active")&&n(e,"imperial","F"),f.select.cityInput.value=""})),f.select.measurement.addEventListener("click",(function(){f.select.celsius.classList.toggle("active"),f.select.fahrenheit.classList.toggle("active");const e=f.select.cityName.textContent;f.select.celsius.classList.contains("active")?n(e,"metric","C"):f.select.fahrenheit.classList.contains("active")&&n(e,"imperial","F")}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,